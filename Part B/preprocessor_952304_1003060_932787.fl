%{
	/******************************************************************
	Panayiotis Charalambous - pchara20 ID: 952304					***
	Andreas Costi			- acosti01 ID: 1003060					***
	Stephanie Nicolaou		- snikol07 ID: 932787					***
																	***
	Part A - Compiler												***
	bison -d parser_952304_1003060_932787.y							***
	flex preprocessor_952304_1003060_932787.fl						***
	gcc parser_952304_1003060_932787.tab.c lex.yy.c -lfl -o a.out	***
	./a.out inputFile.c outputFile.c								***
	*******************************************************************/
	#include "parser_952304_1003060_932787.tab.h"
	int lineno = 1;
	int counter = 0;
%}

letter		[a-zA-Z]
digit		[0-9]
whitespace	[ \r\t]
comment		"/*"((\*+[^/*])|([^*]))*\**"*/"
string		\"([^\"])*\"
space 		[ ]
var_type	void|int
%%
else		   return ELSE;
if			   return IF;
int			return INT;
return		return RETURN;
void		   return VOID;
while		   return WHILE;
[0-9]+		return NUM;
[a-zA-Z]+	return ID;
"+"			return PLUS;
"-"			return MINUS;
"*"			return TIMES;
"/"			return DIVISION;
"<"			return LT;
"<="		   return LTEQ;
">"		   return GT;
">="		   return GTEQ;
"=="		   return EQUAL;
"!="		   return NEQ;
"++"        return INC;
"--"        return DEC;
"+="        return PLUSEQ;
"-="        return MINUSEQ;
"="		   return ASSIGN;
";"		   return SEMICOLON;
","		   return COMMA;
"("		   return LEFT_PAREN;
")"		   return RIGHT_PAREN;
"["		   return LEFT_BRACKET;
"]"		   return RIGHT_BRACKET;
"{"		   return LEFT_BRACE;
"}"		   return RIGHT_BRACE;
[\n]		{yylineno++;}

{comment}	{
			int i = 0;
			for (i = 0; i < yyleng; i++){
				if (yytext[i] == '\n')
					yylineno++;
			}
		}
{whitespace}*	{/*do nothing*/}
.              {ECHO; yyerror("unexpected character");}
%%
int yywrap(){
	return 1;
}
